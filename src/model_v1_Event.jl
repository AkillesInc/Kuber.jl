# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type V1Event
    count::Nullable{ Int32 } # count
    firstTimestamp::Nullable{ UnversionedTime } # firstTimestamp
    involvedObject::Nullable{ V1ObjectReference } # involvedObject
    lastTimestamp::Nullable{ UnversionedTime } # lastTimestamp
    message::Nullable{ String } # message
    metadata::Nullable{ V1ObjectMeta } # metadata
    reason::Nullable{ String } # reason
    source::Nullable{ V1EventSource } # source
    _type::Nullable{ String } # type

    function V1Event(;count=nothing, firstTimestamp=nothing, involvedObject=nothing, lastTimestamp=nothing, message=nothing, metadata=nothing, reason=nothing, source=nothing, _type=nothing)
        o = new()
        set_field!(o, :count, count)
        set_field!(o, :firstTimestamp, firstTimestamp)
        set_field!(o, :involvedObject, involvedObject)
        set_field!(o, :lastTimestamp, lastTimestamp)
        set_field!(o, :message, message)
        set_field!(o, :metadata, metadata)
        set_field!(o, :reason, reason)
        set_field!(o, :source, source)
        set_field!(o, :_type, _type)
        o
    end
end # type V1Event

const _name_map_V1Event = Dict{String,Symbol}(["count"=>:count, "firstTimestamp"=>:firstTimestamp, "involvedObject"=>:involvedObject, "lastTimestamp"=>:lastTimestamp, "message"=>:message, "metadata"=>:metadata, "reason"=>:reason, "source"=>:source, "type"=>:_type])
Swagger.name_map(::Type{ V1Event }) = _name_map_V1Event

function check_required(o::V1Event)
    isnull(o.involvedObject) && (return false)
    isnull(o.metadata) && (return false)
    true
end

function set_field!(o::V1Event, name::Symbol, val)
    setfield!(o, name, fieldtype(V1Event,name)(val))
end

convert(::Type{ V1Event }, json::Dict{String,Any}) = Swagger.from_json(V1Event, json)
