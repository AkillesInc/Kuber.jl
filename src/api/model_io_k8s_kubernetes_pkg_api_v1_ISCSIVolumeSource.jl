# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type IoK8sKubernetesPkgApiV1ISCSIVolumeSource <: SwaggerModel
    fsType::Nullable{ String } # fsType
    iqn::Nullable{ String } # iqn
    iscsiInterface::Nullable{ String } # iscsiInterface
    lun::Nullable{ Int32 } # lun
    portals::Nullable{ Vector{String} } # portals
    readOnly::Nullable{ Bool } # readOnly
    targetPortal::Nullable{ String } # targetPortal

    function IoK8sKubernetesPkgApiV1ISCSIVolumeSource(;fsType=nothing, iqn=nothing, iscsiInterface=nothing, lun=nothing, portals=nothing, readOnly=nothing, targetPortal=nothing)
        o = new()
        set_field!(o, :fsType, fsType)
        set_field!(o, :iqn, iqn)
        set_field!(o, :iscsiInterface, iscsiInterface)
        set_field!(o, :lun, lun)
        set_field!(o, :portals, portals)
        set_field!(o, :readOnly, readOnly)
        set_field!(o, :targetPortal, targetPortal)
        o
    end
end # type IoK8sKubernetesPkgApiV1ISCSIVolumeSource

const _name_map_IoK8sKubernetesPkgApiV1ISCSIVolumeSource = Dict{String,Symbol}(["fsType"=>:fsType, "iqn"=>:iqn, "iscsiInterface"=>:iscsiInterface, "lun"=>:lun, "portals"=>:portals, "readOnly"=>:readOnly, "targetPortal"=>:targetPortal])
const _field_map_IoK8sKubernetesPkgApiV1ISCSIVolumeSource = Dict{Symbol,String}([:fsType=>"fsType", :iqn=>"iqn", :iscsiInterface=>"iscsiInterface", :lun=>"lun", :portals=>"portals", :readOnly=>"readOnly", :targetPortal=>"targetPortal"])
Swagger.name_map(::Type{ IoK8sKubernetesPkgApiV1ISCSIVolumeSource }) = _name_map_IoK8sKubernetesPkgApiV1ISCSIVolumeSource
Swagger.field_map(::Type{ IoK8sKubernetesPkgApiV1ISCSIVolumeSource }) = _field_map_IoK8sKubernetesPkgApiV1ISCSIVolumeSource

function check_required(o::IoK8sKubernetesPkgApiV1ISCSIVolumeSource)
    isnull(o.iqn) && (return false)
    isnull(o.lun) && (return false)
    isnull(o.targetPortal) && (return false)
    true
end

function validate_field(o::IoK8sKubernetesPkgApiV1ISCSIVolumeSource, name::Symbol, val)
end
