# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type IoK8sApimachineryPkgApisMetaV1Status <: SwaggerModel
    apiVersion::Nullable{ String } # apiVersion
    code::Nullable{ Int32 } # code
    details::Nullable{ IoK8sApimachineryPkgApisMetaV1StatusDetails } # details
    kind::Nullable{ String } # kind
    message::Nullable{ String } # message
    metadata::Nullable{ IoK8sApimachineryPkgApisMetaV1ListMeta } # metadata
    reason::Nullable{ String } # reason
    status::Nullable{ String } # status

    function IoK8sApimachineryPkgApisMetaV1Status(;apiVersion=nothing, code=nothing, details=nothing, kind=nothing, message=nothing, metadata=nothing, reason=nothing, status=nothing)
        o = new()
        set_field!(o, :apiVersion, apiVersion)
        set_field!(o, :code, code)
        set_field!(o, :details, details)
        set_field!(o, :kind, kind)
        set_field!(o, :message, message)
        set_field!(o, :metadata, metadata)
        set_field!(o, :reason, reason)
        set_field!(o, :status, status)
        o
    end
end # type IoK8sApimachineryPkgApisMetaV1Status

const _name_map_IoK8sApimachineryPkgApisMetaV1Status = Dict{String,Symbol}(["apiVersion"=>:apiVersion, "code"=>:code, "details"=>:details, "kind"=>:kind, "message"=>:message, "metadata"=>:metadata, "reason"=>:reason, "status"=>:status])
const _field_map_IoK8sApimachineryPkgApisMetaV1Status = Dict{Symbol,String}([:apiVersion=>"apiVersion", :code=>"code", :details=>"details", :kind=>"kind", :message=>"message", :metadata=>"metadata", :reason=>"reason", :status=>"status"])
Swagger.name_map(::Type{ IoK8sApimachineryPkgApisMetaV1Status }) = _name_map_IoK8sApimachineryPkgApisMetaV1Status
Swagger.field_map(::Type{ IoK8sApimachineryPkgApisMetaV1Status }) = _field_map_IoK8sApimachineryPkgApisMetaV1Status

function check_required(o::IoK8sApimachineryPkgApisMetaV1Status)
    true
end

function validate_field(o::IoK8sApimachineryPkgApisMetaV1Status, name::Symbol, val)
end
