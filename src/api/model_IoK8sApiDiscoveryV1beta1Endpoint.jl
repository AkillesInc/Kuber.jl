# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct IoK8sApiDiscoveryV1beta1Endpoint <: SwaggerModel
    addresses::Any # spec type: Union{ Nothing, Vector{String} } # spec name: addresses
    conditions::Any # spec type: Union{ Nothing, IoK8sApiDiscoveryV1beta1EndpointConditions } # spec name: conditions
    hostname::Any # spec type: Union{ Nothing, String } # spec name: hostname
    targetRef::Any # spec type: Union{ Nothing, IoK8sApiCoreV1ObjectReference } # spec name: targetRef
    topology::Any # spec type: Union{ Nothing, Dict{String, String} } # spec name: topology

    function IoK8sApiDiscoveryV1beta1Endpoint(;addresses=nothing, conditions=nothing, hostname=nothing, targetRef=nothing, topology=nothing)
        o = new()
        validate_property(IoK8sApiDiscoveryV1beta1Endpoint, Symbol("addresses"), addresses)
        setfield!(o, Symbol("addresses"), addresses)
        validate_property(IoK8sApiDiscoveryV1beta1Endpoint, Symbol("conditions"), conditions)
        setfield!(o, Symbol("conditions"), conditions)
        validate_property(IoK8sApiDiscoveryV1beta1Endpoint, Symbol("hostname"), hostname)
        setfield!(o, Symbol("hostname"), hostname)
        validate_property(IoK8sApiDiscoveryV1beta1Endpoint, Symbol("targetRef"), targetRef)
        setfield!(o, Symbol("targetRef"), targetRef)
        validate_property(IoK8sApiDiscoveryV1beta1Endpoint, Symbol("topology"), topology)
        setfield!(o, Symbol("topology"), topology)
        o
    end
end # type IoK8sApiDiscoveryV1beta1Endpoint

const _property_map_IoK8sApiDiscoveryV1beta1Endpoint = Dict{Symbol,Symbol}(Symbol("addresses")=>Symbol("addresses"), Symbol("conditions")=>Symbol("conditions"), Symbol("hostname")=>Symbol("hostname"), Symbol("targetRef")=>Symbol("targetRef"), Symbol("topology")=>Symbol("topology"))
const _property_types_IoK8sApiDiscoveryV1beta1Endpoint = Dict{Symbol,String}(Symbol("addresses")=>"Vector{String}", Symbol("conditions")=>"IoK8sApiDiscoveryV1beta1EndpointConditions", Symbol("hostname")=>"String", Symbol("targetRef")=>"IoK8sApiCoreV1ObjectReference", Symbol("topology")=>"Dict{String, String}")
Base.propertynames(::Type{ IoK8sApiDiscoveryV1beta1Endpoint }) = collect(keys(_property_map_IoK8sApiDiscoveryV1beta1Endpoint))
Swagger.property_type(::Type{ IoK8sApiDiscoveryV1beta1Endpoint }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiDiscoveryV1beta1Endpoint[name]))}
Swagger.field_name(::Type{ IoK8sApiDiscoveryV1beta1Endpoint }, property_name::Symbol) =  _property_map_IoK8sApiDiscoveryV1beta1Endpoint[property_name]

function check_required(o::IoK8sApiDiscoveryV1beta1Endpoint)
    (getproperty(o, Symbol("addresses")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiDiscoveryV1beta1Endpoint }, name::Symbol, val)
end
