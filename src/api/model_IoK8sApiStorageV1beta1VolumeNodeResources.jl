# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct IoK8sApiStorageV1beta1VolumeNodeResources <: SwaggerModel
    count::Any # spec type: Union{ Nothing, Int32 } # spec name: count

    function IoK8sApiStorageV1beta1VolumeNodeResources(;count=nothing)
        o = new()
        validate_property(IoK8sApiStorageV1beta1VolumeNodeResources, Symbol("count"), count)
        setfield!(o, Symbol("count"), count)
        o
    end
end # type IoK8sApiStorageV1beta1VolumeNodeResources

const _property_map_IoK8sApiStorageV1beta1VolumeNodeResources = Dict{Symbol,Symbol}(Symbol("count")=>Symbol("count"))
const _property_types_IoK8sApiStorageV1beta1VolumeNodeResources = Dict{Symbol,String}(Symbol("count")=>"Int32")
Base.propertynames(::Type{ IoK8sApiStorageV1beta1VolumeNodeResources }) = collect(keys(_property_map_IoK8sApiStorageV1beta1VolumeNodeResources))
Swagger.property_type(::Type{ IoK8sApiStorageV1beta1VolumeNodeResources }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiStorageV1beta1VolumeNodeResources[name]))}
Swagger.field_name(::Type{ IoK8sApiStorageV1beta1VolumeNodeResources }, property_name::Symbol) =  _property_map_IoK8sApiStorageV1beta1VolumeNodeResources[property_name]

function check_required(o::IoK8sApiStorageV1beta1VolumeNodeResources)
    true
end

function validate_property(::Type{ IoK8sApiStorageV1beta1VolumeNodeResources }, name::Symbol, val)
end
