# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference <: SwaggerModel
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    namespace::Any # spec type: Union{ Nothing, String } # spec name: namespace
    port::Any # spec type: Union{ Nothing, Int32 } # spec name: port

    function IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference(;name=nothing, namespace=nothing, port=nothing)
        o = new()
        validate_property(IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference, Symbol("namespace"), namespace)
        setfield!(o, Symbol("namespace"), namespace)
        validate_property(IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference, Symbol("port"), port)
        setfield!(o, Symbol("port"), port)
        o
    end
end # type IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference

const _property_map_IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference = Dict{Symbol,Symbol}(Symbol("name")=>Symbol("name"), Symbol("namespace")=>Symbol("namespace"), Symbol("port")=>Symbol("port"))
const _property_types_IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("namespace")=>"String", Symbol("port")=>"Int32")
Base.propertynames(::Type{ IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference }) = collect(keys(_property_map_IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference))
Swagger.property_type(::Type{ IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference[name]))}
Swagger.field_name(::Type{ IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference }, property_name::Symbol) =  _property_map_IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference[property_name]

function check_required(o::IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference)
    true
end

function validate_property(::Type{ IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference }, name::Symbol, val)
end
