# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec <: SwaggerModel
    extra::Nullable{ Dict{String, Vector{String}} } # extra
    groups::Nullable{ Vector{String} } # groups
    request::Nullable{ Vector{UInt8} } # request
    uid::Nullable{ String } # uid
    usages::Nullable{ Vector{String} } # usages
    username::Nullable{ String } # username

    function IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec(;extra=nothing, groups=nothing, request=nothing, uid=nothing, usages=nothing, username=nothing)
        o = new()
        set_field!(o, :extra, extra)
        set_field!(o, :groups, groups)
        set_field!(o, :request, request)
        set_field!(o, :uid, uid)
        set_field!(o, :usages, usages)
        set_field!(o, :username, username)
        o
    end
end # type IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec

const _name_map_IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec = Dict{String,Symbol}(["extra"=>:extra, "groups"=>:groups, "request"=>:request, "uid"=>:uid, "usages"=>:usages, "username"=>:username])
const _field_map_IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec = Dict{Symbol,String}([:extra=>"extra", :groups=>"groups", :request=>"request", :uid=>"uid", :usages=>"usages", :username=>"username"])
Swagger.name_map(::Type{ IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec }) = _name_map_IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec
Swagger.field_map(::Type{ IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec }) = _field_map_IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec

function check_required(o::IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec)
    isnull(o.request) && (return false)
    true
end

function validate_field(o::IoK8sApiCertificatesV1beta1CertificateSigningRequestSpec, name::Symbol, val)
end
