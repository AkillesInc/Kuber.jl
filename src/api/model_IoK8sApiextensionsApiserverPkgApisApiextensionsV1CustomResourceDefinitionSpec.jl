# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec <: SwaggerModel
    conversion::Any # spec type: Union{ Nothing, IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion } # spec name: conversion
    group::Any # spec type: Union{ Nothing, String } # spec name: group
    names::Any # spec type: Union{ Nothing, IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames } # spec name: names
    preserveUnknownFields::Any # spec type: Union{ Nothing, Bool } # spec name: preserveUnknownFields
    scope::Any # spec type: Union{ Nothing, String } # spec name: scope
    versions::Any # spec type: Union{ Nothing, Vector{IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion} } # spec name: versions

    function IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec(;conversion=nothing, group=nothing, names=nothing, preserveUnknownFields=nothing, scope=nothing, versions=nothing)
        o = new()
        validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec, Symbol("conversion"), conversion)
        setfield!(o, Symbol("conversion"), conversion)
        validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec, Symbol("group"), group)
        setfield!(o, Symbol("group"), group)
        validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec, Symbol("names"), names)
        setfield!(o, Symbol("names"), names)
        validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec, Symbol("preserveUnknownFields"), preserveUnknownFields)
        setfield!(o, Symbol("preserveUnknownFields"), preserveUnknownFields)
        validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec, Symbol("scope"), scope)
        setfield!(o, Symbol("scope"), scope)
        validate_property(IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec, Symbol("versions"), versions)
        setfield!(o, Symbol("versions"), versions)
        o
    end
end # type IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec

const _property_map_IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec = Dict{Symbol,Symbol}(Symbol("conversion")=>Symbol("conversion"), Symbol("group")=>Symbol("group"), Symbol("names")=>Symbol("names"), Symbol("preserveUnknownFields")=>Symbol("preserveUnknownFields"), Symbol("scope")=>Symbol("scope"), Symbol("versions")=>Symbol("versions"))
const _property_types_IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec = Dict{Symbol,String}(Symbol("conversion")=>"IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion", Symbol("group")=>"String", Symbol("names")=>"IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames", Symbol("preserveUnknownFields")=>"Bool", Symbol("scope")=>"String", Symbol("versions")=>"Vector{IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion}")
Base.propertynames(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec }) = collect(keys(_property_map_IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec))
Swagger.property_type(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec[name]))}
Swagger.field_name(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec }, property_name::Symbol) =  _property_map_IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec[property_name]

function check_required(o::IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec)
    (getproperty(o, Symbol("group")) === nothing) && (return false)
    (getproperty(o, Symbol("names")) === nothing) && (return false)
    (getproperty(o, Symbol("scope")) === nothing) && (return false)
    (getproperty(o, Symbol("versions")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec }, name::Symbol, val)
end
