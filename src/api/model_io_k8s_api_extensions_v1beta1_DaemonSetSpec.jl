# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type IoK8sApiExtensionsV1beta1DaemonSetSpec <: SwaggerModel
    minReadySeconds::Nullable{ Int32 } # minReadySeconds
    revisionHistoryLimit::Nullable{ Int32 } # revisionHistoryLimit
    selector::Nullable{ IoK8sApimachineryPkgApisMetaV1LabelSelector } # selector
    template::Nullable{ IoK8sApiCoreV1PodTemplateSpec } # template
    templateGeneration::Nullable{ Int64 } # templateGeneration
    updateStrategy::Nullable{ IoK8sApiExtensionsV1beta1DaemonSetUpdateStrategy } # updateStrategy

    function IoK8sApiExtensionsV1beta1DaemonSetSpec(;minReadySeconds=nothing, revisionHistoryLimit=nothing, selector=nothing, template=nothing, templateGeneration=nothing, updateStrategy=nothing)
        o = new()
        set_field!(o, :minReadySeconds, minReadySeconds)
        set_field!(o, :revisionHistoryLimit, revisionHistoryLimit)
        set_field!(o, :selector, selector)
        set_field!(o, :template, template)
        set_field!(o, :templateGeneration, templateGeneration)
        set_field!(o, :updateStrategy, updateStrategy)
        o
    end
end # type IoK8sApiExtensionsV1beta1DaemonSetSpec

const _name_map_IoK8sApiExtensionsV1beta1DaemonSetSpec = Dict{String,Symbol}(["minReadySeconds"=>:minReadySeconds, "revisionHistoryLimit"=>:revisionHistoryLimit, "selector"=>:selector, "template"=>:template, "templateGeneration"=>:templateGeneration, "updateStrategy"=>:updateStrategy])
const _field_map_IoK8sApiExtensionsV1beta1DaemonSetSpec = Dict{Symbol,String}([:minReadySeconds=>"minReadySeconds", :revisionHistoryLimit=>"revisionHistoryLimit", :selector=>"selector", :template=>"template", :templateGeneration=>"templateGeneration", :updateStrategy=>"updateStrategy"])
Swagger.name_map(::Type{ IoK8sApiExtensionsV1beta1DaemonSetSpec }) = _name_map_IoK8sApiExtensionsV1beta1DaemonSetSpec
Swagger.field_map(::Type{ IoK8sApiExtensionsV1beta1DaemonSetSpec }) = _field_map_IoK8sApiExtensionsV1beta1DaemonSetSpec

function check_required(o::IoK8sApiExtensionsV1beta1DaemonSetSpec)
    isnull(o.template) && (return false)
    true
end

function validate_field(o::IoK8sApiExtensionsV1beta1DaemonSetSpec, name::Symbol, val)
end
