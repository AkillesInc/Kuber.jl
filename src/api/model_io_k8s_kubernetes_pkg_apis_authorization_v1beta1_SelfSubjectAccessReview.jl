# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview <: SwaggerModel
    apiVersion::Nullable{ String } # apiVersion
    kind::Nullable{ String } # kind
    metadata::Nullable{ IoK8sApimachineryPkgApisMetaV1ObjectMeta } # metadata
    spec::Nullable{ IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReviewSpec } # spec
    status::Nullable{ IoK8sKubernetesPkgApisAuthorizationV1beta1SubjectAccessReviewStatus } # status

    function IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview(;apiVersion=nothing, kind=nothing, metadata=nothing, spec=nothing, status=nothing)
        o = new()
        set_field!(o, :apiVersion, apiVersion)
        set_field!(o, :kind, kind)
        set_field!(o, :metadata, metadata)
        set_field!(o, :spec, spec)
        set_field!(o, :status, status)
        o
    end
end # type IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview

const _name_map_IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview = Dict{String,Symbol}(["apiVersion"=>:apiVersion, "kind"=>:kind, "metadata"=>:metadata, "spec"=>:spec, "status"=>:status])
const _field_map_IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview = Dict{Symbol,String}([:apiVersion=>"apiVersion", :kind=>"kind", :metadata=>"metadata", :spec=>"spec", :status=>"status"])
Swagger.name_map(::Type{ IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview }) = _name_map_IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview
Swagger.field_map(::Type{ IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview }) = _field_map_IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview

function check_required(o::IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview)
    isnull(o.spec) && (return false)
    true
end

function validate_field(o::IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview, name::Symbol, val)
end
