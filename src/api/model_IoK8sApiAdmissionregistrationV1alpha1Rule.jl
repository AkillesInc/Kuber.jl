# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiAdmissionregistrationV1alpha1Rule <: SwaggerModel
    apiGroups::Any # spec type: Union{ Nothing, Vector{String} } # spec name: apiGroups
    apiVersions::Any # spec type: Union{ Nothing, Vector{String} } # spec name: apiVersions
    resources::Any # spec type: Union{ Nothing, Vector{String} } # spec name: resources

    function IoK8sApiAdmissionregistrationV1alpha1Rule(;apiGroups=nothing, apiVersions=nothing, resources=nothing)
        o = new()
        validate_property(IoK8sApiAdmissionregistrationV1alpha1Rule, Symbol("apiGroups"), apiGroups)
        setfield!(o, Symbol("apiGroups"), apiGroups)
        validate_property(IoK8sApiAdmissionregistrationV1alpha1Rule, Symbol("apiVersions"), apiVersions)
        setfield!(o, Symbol("apiVersions"), apiVersions)
        validate_property(IoK8sApiAdmissionregistrationV1alpha1Rule, Symbol("resources"), resources)
        setfield!(o, Symbol("resources"), resources)
        o
    end
end # type IoK8sApiAdmissionregistrationV1alpha1Rule

const _property_map_IoK8sApiAdmissionregistrationV1alpha1Rule = Dict{Symbol,Symbol}(Symbol("apiGroups")=>Symbol("apiGroups"), Symbol("apiVersions")=>Symbol("apiVersions"), Symbol("resources")=>Symbol("resources"))
const _property_types_IoK8sApiAdmissionregistrationV1alpha1Rule = Dict{Symbol,String}(Symbol("apiGroups")=>"Vector{String}", Symbol("apiVersions")=>"Vector{String}", Symbol("resources")=>"Vector{String}")
Base.propertynames(::Type{ IoK8sApiAdmissionregistrationV1alpha1Rule }) = collect(keys(_property_map_IoK8sApiAdmissionregistrationV1alpha1Rule))
Swagger.property_type(::Type{ IoK8sApiAdmissionregistrationV1alpha1Rule }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiAdmissionregistrationV1alpha1Rule[name]))}
Swagger.field_name(::Type{ IoK8sApiAdmissionregistrationV1alpha1Rule }, property_name::Symbol) =  _property_map_IoK8sApiAdmissionregistrationV1alpha1Rule[property_name]

function check_required(o::IoK8sApiAdmissionregistrationV1alpha1Rule)
    true
end

function validate_property(::Type{ IoK8sApiAdmissionregistrationV1alpha1Rule }, name::Symbol, val)
end
